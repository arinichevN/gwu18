
UDP шлюз для DS18B20
По запросу клиента читает температуру с датчика и передает этому клиенту результат.
Количество подключаемых датчиков не ограничивается программой. Один пин - несколько датчиков.

1 Установка
1.1 Требования
Функции управления пинами реализованы для процессора Allwinner A20 и H3. Скрипт-установщик
работает в командной оболочке bash.
1.2 Настройка перед установкой
- место установки исполняемого файла: файл build.sh константа INST_DIR
- место установки файла конфигурации: файл build.sh константа CONF_DIR (должна соответствовать CONF_DIR из main.h)
- см. ./lib/gpio/README
1.3 Команды для установки:
cd gwu18
Полная установка
sudo ./build.sh full
Полная установка, не затрагивая конфигурационных файлов:
sudo ./build.sh full_nc
Для тестирования (файлы не копируются за пределы текущей папки):
sudo ./build.sh part_debug

2 Настройка после установки
Общие настройки демона читаются из файла CONFIG_FILE (main.h).
Формат CONFIG_FILE:
 Port\tPidPath\tSocketBufferSize\tRetryCount
 где
 Port - порт (должен быть уникальным в рамках хоста);
 PidPath - путь к файлу блокировки;
 SocketBufferSize - максимальный размер пакета, передаваемого по сети.
 RetryCount - число попыток чтения с датчика при неудаче.
Формат DEVICE_FILE:
 Id\tPin\tAddress\tResolution
 где
 Id -уникальный номер датчика температуры (выбирается произвольно;
 в дальнейшем, по нему можно будет получить значение температуры с датчика на данном порте);
 Pin - физический номер порта к которому подключен датчик DS18B20;
 Address - 16-битный уникальный адрес датчика (используй утилиту 1wgr, чтобы его
 узнать);
 Resolution - разрешение датчика (от 9 до 12 бит).

3 Запуск
При полной установке запускается автоматически, вмести с операционной системой.
sudo gwu18
В режиме отладки (не отключается от терминала и выдает сообщения):
sudo gwu18_dbg
Если приложение установлено для тестирования:
sudo ./gwu18_dbg

4 Управление

4.1 Список команд
см. ./print.c printHelp()

4.2 Графический интерфейс пользователя
для чтения результатов измерений:
https://github.com/arinichevN/monitor_cl 
для отправки общих для всех демонов команд:
https://github.com/arinichevN/app_cl 

4.3 Примеры
Для рассылки udp пакетов используется утилита udpcl (https://github.com/arinichevN/udpcl)
Утилита netcat не подходит, так как разрывает пакеты, встречая символ '\n'
Параметры утилиты udpcl следует заменить на свои.
перезагрузка с чтением всех настроек:
udpcl ars '' 192.168.1.250 49161 1
запрос температуры для датчика №1 и №2:
udpcl gfts 1\n2\n 192.168.1.250 49161 2
